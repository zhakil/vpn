# VPS代理管理系统 - Nginx主配置
# 高性能反向代理配置，支持负载均衡和SSL终结

user nginx;
worker_processes auto;
worker_cpu_affinity auto;
error_log /var/log/nginx/error.log warn;
pid /run/nginx.pid;

# 性能优化配置
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式定义
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   '$request_time $upstream_response_time';

    log_format json_combined escape=json
        '{'
            '"time":"$time_iso8601",' 
            '"remote_addr":"$remote_addr",' 
            '"request":"$request",' 
            '"status":$status,' 
            '"body_bytes_sent":$body_bytes_sent,' 
            '"request_time":$request_time,' 
            '"upstream_response_time":"$upstream_response_time",' 
            '"user_agent":"$http_user_agent"'
        '}';

    access_log /var/log/nginx/access.log main;

    # 基础性能配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 10000;
    types_hash_max_size 2048;
    server_tokens off;

    # 客户端配置
    client_max_body_size 20m;
    client_body_buffer_size 256k;
    client_header_buffer_size 2k;
    large_client_header_buffers 4 8k;
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    # Gzip压缩配置
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1024;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/javascript
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy
        text/xml;

    # 安全头配置
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    add_header X-Real-IP $remote_addr;

    # SSL/TLS配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=conn:10m;

    # 上游服务器定义
    upstream api_backend {
        least_conn;
        server api-gateway:8080 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    upstream rule_backend {
        server rule-engine:8081 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream config_backend {
        server config-manager:8082 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream grafana_backend {
        server grafana:3000 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    upstream prometheus_backend {
        server prometheus:9090 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    # 包含站点配置文件
    include /etc/nginx/conf.d/*.conf;
}

# TCP/UDP代理配置（Stream模块）
stream {
    # 日志配置
    log_format proxy '$remote_addr [$time_local] '
                    '$protocol $status $bytes_sent $bytes_received '
                    '$session_time "$upstream_addr"'
                    '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

    access_log /var/log/nginx/stream_access.log proxy;

    # 上游代理服务器
    upstream v2ray_stream {
        least_conn;
        server v2ray-core:10001 max_fails=2 fail_timeout=30s;
        server v2ray-core:10002 max_fails=2 fail_timeout=30s;
        server v2ray-core:10003 max_fails=2 fail_timeout=30s;
    }

    upstream clash_stream {
        server clash-core:7890 max_fails=2 fail_timeout=30s;
    }

    upstream hysteria_stream {
        server hysteria-core:36712 max_fails=2 fail_timeout=30s;
    }

    # V2Ray代理端口转发
    server {
        listen 10001-10020;
        proxy_pass v2ray_stream;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
        proxy_protocol off;
    }

    # Clash HTTP代理
    server {
        listen 7890;
        proxy_pass clash_stream;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
    }

    # Hysteria UDP代理
    server {
        listen 36712 udp;
        proxy_pass hysteria_stream;
        proxy_timeout 3s;
        proxy_responses 1;
        error_log /var/log/nginx/hysteria_error.log;
    }

    # 健康检查
    server {
        listen 8888;
        return "VPS Proxy System OK\n";
    }
}